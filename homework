'''
Задача №55. Создать телефонный справочник с возможностью импорта и экспорта данных в формате .txt. Фамилия, имя, отчество, номер телефона - данные, которые должны находиться в файле.
Программа должна выводить данные
Программа должна сохранять данные в текстовом файле
Пользователь может ввести одну из характеристик для поиска определенной записи(Например имя или фамилию человека)
Использование функций. Ваша программа не должна быть линейной
'''
'''
1. Внесение данных
    - получить от пользователя контактные данные
    - открываем файл на дозапись
    - записываем данные
2. Вывод данных на экран
    - открываем файл на считывание
    - получаем данные из файла
    - выводим данные на экран
3. Поиск контакта
    - запрос варианта поиска контакта
    - получить от пользователя данные для поиска
    - открываем файл на считывание
    - получаем данные из файла
    - осуществляем поиск контакта
    - выводим контакт на экран
4. Создание интерфейса
    - открываем файл на дозапись
    - выводим меню пользователя на экран
    - запрос действия
    - запуск соответствующей функции
    - осуществление выхода из программы
'''
import random

# Функция для ввода фамилии пользователя
def input_surname():
    return input('Введите фамилию: ').title()

# Функция для ввода имени пользователя
def input_name():
    return input('Введите имя: ').title()

# Функция для ввода отчества пользователя
def input_patronymic():
    return input('Введите отчество: ').title()

# Функция для ввода номера телефона пользователя
def input_phone():
    return input('Введите номер телефона: ')

# Функция для ввода адреса пользователя
def input_address():
    return input('Введите адрес (город): ').title()

# Функция для создания контакта
def create_contact():
    surname = input_surname()
    name = input_name()
    patronymic = input_patronymic()
    phone = input_phone()
    address = input_address()
    return f'{surname} {name} {patronymic} {phone} {address}'

# Функция для внесения данных в телефонную книгу
def data_input():
    contact = create_contact()
    with open('phonebook.txt', 'a', encoding='utf-8') as f:
        f.write(f'{contact}\n\n')

# Функция для чтения данных из файла
def read_file():
    with open('phonebook.txt', 'r', encoding='utf-8') as f:
        return f.read()

# Функция для вывода данных на экран
def print_data():    
    print(read_file())

# Функция для поиска контакта
def search_contact():
    print(
        'Варианты поиска:\n'\
        '1 - по фамилии\n'\
        '2 - по имени\n'\
        '3 - по отчеству\n'\
        '4 - по телефону\n'\
        '5 - по адресу(городу)'
        )
    var = input('Выберите необходимый вариант: ')
    while var not in ('1', '2', '3', '4', '5'):
            print('Некорректный ввод данных!')
            var = input('Выберите необходимый вариант: ')
            print()            
    i_var = int(var) - 1

    find = input('Введите данные для поиска: ').title()
    print()
    contacts = read_file()
    contacts_list = contacts.strip().split('\n\n')
    for contact_str in contacts_list:
        contact_lst = contact_str.replace('\n', ' ').split()        
        if find in contact_lst[i_var]:
            print(contact_str)
    print()

# Функция для копирования контакта
def copy_contact():
    with open('phonebook.txt', 'r', encoding='utf-8') as source_file:
        lines = source_file.readlines()
    
    # Получаем от пользователя номер строки для копирования
    line_number = int(input('Введите номер строки для копирования: '))
    
    # Проверяем корректность ввода
    if line_number < 1 or line_number > len(lines):
        print('Некорректный номер строки!')
        return
    
    # Открываем файл для записи, куда будем копировать данные
    with open('phonebook_copy.txt', 'a', encoding='utf-8') as dest_file:
        # Записываем выбранную строку в новый файл
        dest_file.write(f'{lines[line_number - 1]}\n\n')

# Функция для интерфейса программы
def interface():
    # Создаем пустой файл для копии данных, если его еще нет
    with open("phonebook_copy.txt", "a", encoding='utf-8'):
        pass
    choice = ''
    while choice != '5':
        print(
            "Варианты действия: \n" \
            "1 - Ввод данных контакта \n" \
            "2 - Вывести данные на экран \n" \
            "3 - Поиск контакта \n" \
            "4 - Копирование контакта \n" \
            "5 - Выход"
            )
        print()
        choice = input("Выберите номер действия: ")
        print()
        while choice not in ('1', '2', '3', '4', '5'):
            print("Некорректный ввод данных!")
            choice = input("Выберите номер действия: ")
            print()
        if choice == '1':
            data_input()
        elif choice == '2':
            print_data()
        elif choice == '3':
            search_contact()
        elif choice == '4':
            copy_contact()
        elif choice == '5':
            print('Всего доброго!')

if __name__ == '__main__':
    interface()
